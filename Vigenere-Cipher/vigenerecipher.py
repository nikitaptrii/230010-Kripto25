# -*- coding: utf-8 -*-
"""vigenerecipher.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Krh8nRqtuScS-Rkf6Qe8Dlki6nGuLpEN
"""

# Nama : Nikita Putri Prabowo
# NPM : 140810230010
# Mata Kuliah : Praktikum Kriptografi

def ch2n(c):
    c = c.upper()
    return ord(c) - 65 if "A" <= c <= "Z" else None

def n2ch(n: int) -> str:
    return chr((n % 26) + 65)

def clean_key(key: str) -> str:
    k = "".join([c for c in key.upper() if "A" <= c <= "Z"])
    if not k:
        raise ValueError("Key harus berisi huruf A-Z.")
    return k

def vigenere_encrypt(pt: str, key: str) -> str:
    key = clean_key(key)
    out, j = [], 0
    for c in pt:
        n = ch2n(c)
        if n is None:
            out.append(c)  # spasi/tanda baca dipertahankan
        else:
            k = ord(key[j % len(key)]) - 65
            out.append(n2ch((n + k) % 26))
            j += 1
    return "".join(out)

def vigenere_decrypt(ct: str, key: str) -> str:
    key = clean_key(key)
    out, j = [], 0
    for c in ct:
        n = ch2n(c)
        if n is None:
            out.append(c)
        else:
            k = ord(key[j % len(key)]) - 65
            out.append(n2ch((n - k) % 26))
            j += 1
    return "".join(out)

def main():
    while True:
        print("\n=== VIGENERE ===")
        print("1) Encrypt")
        print("2) Decrypt")
        print("0) Keluar")
        choice = input("Pilih: ").strip()

        try:
            if choice == "1":
                pt = input("Plaintext : ")
                key = input("Key (A-Z) : ")
                print("Ciphertext:", vigenere_encrypt(pt, key))
            elif choice == "2":
                ct = input("Ciphertext: ")
                key = input("Key (A-Z) : ")
                print("Plaintext :", vigenere_decrypt(ct, key))
            elif choice == "0":
                break
            else:
                print("Pilihan tidak dikenal.")
        except Exception as e:
            print("Error:", e)

if __name__ == "__main__":
    main()

